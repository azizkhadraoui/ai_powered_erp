{"ast":null,"code":"var _jsxFileName = \"F:\\\\ains\\\\ai_erp\\\\src\\\\screens\\\\epics.jsx\";\nimport React from 'react';\nimport { Avatar, Card, CardContent, CardHeader, Chip, Stack, Typography } from '@mui/material';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EpicsPage = () => {\n  // Example data for epics\n  const epics = [{\n    id: 1,\n    title: 'Epic 1',\n    description: 'This is the description for Epic 1.',\n    status: 'In Progress'\n  }, {\n    id: 2,\n    title: 'Epic 2',\n    description: 'This is the description for Epic 2.',\n    status: 'Pending'\n  }, {\n    id: 3,\n    title: 'Epic 3',\n    description: 'This is the description for Epic 3.',\n    status: 'Completed'\n  }];\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 3,\n    sx: {\n      padding: 3\n    },\n    children: epics.map(epic => /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: epic.title,\n        subheader: `Status: ${epic.status}`,\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: 'primary.main'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: epic.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this),\n          label: epic.status,\n          color: epic.status === 'Completed' ? 'success' : 'warning'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, epic.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = EpicsPage;\nexport default EpicsPage;\nvar _c;\n$RefreshReg$(_c, \"EpicsPage\");","map":{"version":3,"names":["React","Avatar","Card","CardContent","CardHeader","Chip","Stack","Typography","ListAltIcon","CheckCircleIcon","jsxDEV","_jsxDEV","EpicsPage","epics","id","title","description","status","spacing","sx","padding","children","map","epic","subheader","avatar","bgcolor","fileName","_jsxFileName","lineNumber","columnNumber","variant","paragraph","gutterBottom","icon","label","color","_c","$RefreshReg$"],"sources":["F:/ains/ai_erp/src/screens/epics.jsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Chip,\r\n  Stack,\r\n  Typography,\r\n} from '@mui/material';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nconst EpicsPage = () => {\r\n  // Example data for epics\r\n  const epics = [\r\n    {\r\n      id: 1,\r\n      title: 'Epic 1',\r\n      description: 'This is the description for Epic 1.',\r\n      status: 'In Progress',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Epic 2',\r\n      description: 'This is the description for Epic 2.',\r\n      status: 'Pending',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Epic 3',\r\n      description: 'This is the description for Epic 3.',\r\n      status: 'Completed',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Stack spacing={3} sx={{ padding: 3 }}>\r\n      {epics.map((epic) => (\r\n        <Card key={epic.id}>\r\n          <CardHeader\r\n            title={epic.title}\r\n            subheader={`Status: ${epic.status}`}\r\n            avatar={\r\n              <Avatar sx={{ bgcolor: 'primary.main' }}>\r\n                <ListAltIcon />\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Typography variant=\"body1\" paragraph>\r\n              {epic.description}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Status\r\n            </Typography>\r\n            <Chip\r\n              icon={<CheckCircleIcon />}\r\n              label={epic.status}\r\n              color={epic.status === 'Completed' ? 'success' : 'warning'}\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default EpicsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}