{"ast":null,"code":"var _jsxFileName = \"F:\\\\ains\\\\ai_erp\\\\src\\\\global\\\\navbar.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Typography, Drawer, List, ListItem, ListItemText, IconButton } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  }\n}));\nfunction Navbar({\n  isOpen,\n  toggleNav\n}) {\n  _s();\n  // Receive isOpen and toggleNav props\n  const classes = useStyles();\n  const handleDrawerClose = () => {\n    toggleNav(); // Call toggleNav function to close the navbar\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: toggleNav // Toggle the navbar when menu icon is clicked\n          ,\n          edge: \"start\",\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Your App Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: isOpen // Use isOpen prop to control the open state of the navbar\n      ,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: [\" \", /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          to: \"/profiles\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Profiles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          to: \"/projects\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","Link","AppBar","Toolbar","Typography","Drawer","List","ListItem","ListItemText","IconButton","makeStyles","MenuIcon","jsxDEV","_jsxDEV","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","Navbar","isOpen","toggleNav","_s","classes","handleDrawerClose","className","children","position","color","onClick","edge","fileName","_jsxFileName","lineNumber","columnNumber","variant","noWrap","anchor","open","paper","button","component","to","primary","_c","$RefreshReg$"],"sources":["F:/ains/ai_erp/src/global/navbar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppBar, Toolbar, Typography, Drawer, List, ListItem, ListItemText, IconButton } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nfunction Navbar({ isOpen, toggleNav }) { // Receive isOpen and toggleNav props\r\n  const classes = useStyles();\r\n\r\n  const handleDrawerClose = () => {\r\n    toggleNav(); // Call toggleNav function to close the navbar\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={toggleNav} // Toggle the navbar when menu icon is clicked\r\n            edge=\"start\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Your App Name\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={isOpen} // Use isOpen prop to control the open state of the navbar\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}> {/* Close the navbar when clicked */}\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </div>\r\n        <List>\r\n          <ListItem button component={Link} to=\"/\">\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n          <ListItem button component={Link} to=\"/profiles\">\r\n            <ListItemText primary=\"Profiles\" />\r\n          </ListItem>\r\n          <ListItem button component={Link} to=\"/projects\">\r\n            <ListItemText primary=\"Projects\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}