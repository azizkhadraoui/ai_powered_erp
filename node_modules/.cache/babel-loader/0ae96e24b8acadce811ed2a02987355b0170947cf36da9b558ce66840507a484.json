{"ast":null,"code":"var _jsxFileName = \"F:\\\\ains\\\\ai_erp\\\\src\\\\screens\\\\Main.jsx\";\n// import React from 'react';\n// import Avatar from '@mui/material/Avatar';\n// import Card from '@mui/material/Card';\n// import CardContent from '@mui/material/CardContent';\n// import LinearProgress from '@mui/material/LinearProgress';\n// import Stack from '@mui/material/Stack';\n// import Typography from '@mui/material/Typography';\n// import ListAltIcon from '@mui/icons-material/ListAlt';\n// import AttachMoneyIcon from '@mui/icons-material/AttachMoney';\n// import PersonAddIcon from '@mui/icons-material/PersonAdd';\n// import NotificationsIcon from '@mui/icons-material/Notifications';\n\n// const Dashboard = () => {\n//   return (\n//     <Stack spacing={3} sx={{ padding: 3 }}>\n//       <TasksProgress value={75} />\n//       <Revenue value={50000} />\n//       <UserGrowth value={1200} />\n//       <Notifications value={5} />\n//     </Stack>\n//   );\n// };\n\n// export interface TasksProgressProps {\n//   value: number;\n// }\n\n// const TasksProgress: React.FC<TasksProgressProps> = ({ value }) => {\n//   return (\n//     <Card>\n//       <CardContent>\n//         <Stack spacing={2}>\n//           <Stack direction=\"row\" sx={{ alignItems: 'flex-start', justifyContent: 'space-between' }} spacing={3}>\n//             <Stack spacing={1}>\n//               <Typography color=\"text.secondary\" gutterBottom variant=\"overline\">\n//                 Task Progress\n//               </Typography>\n//               <Typography variant=\"h4\">{value}%</Typography>\n//             </Stack>\n//             <Avatar sx={{ backgroundColor: 'warning.main', height: 56, width: 56 }}>\n//               <ListAltIcon fontSize=\"large\" />\n//             </Avatar>\n//           </Stack>\n//           <LinearProgress value={value} variant=\"determinate\" />\n//         </Stack>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// export interface RevenueProps {\n//   value: number;\n// }\n\n// const Revenue: React.FC<RevenueProps> = ({ value }) => {\n//   return (\n//     <Card>\n//       <CardContent>\n//         <Stack spacing={2}>\n//           <Stack direction=\"row\" sx={{ alignItems: 'flex-start', justifyContent: 'space-between' }} spacing={3}>\n//             <Stack spacing={1}>\n//               <Typography color=\"text.secondary\" gutterBottom variant=\"overline\">\n//                 Revenue\n//               </Typography>\n//               <Typography variant=\"h4\">${value.toLocaleString()}</Typography>\n//             </Stack>\n//             <Avatar sx={{ backgroundColor: 'success.main', height: 56, width: 56 }}>\n//               <AttachMoneyIcon fontSize=\"large\" />\n//             </Avatar>\n//           </Stack>\n//         </Stack>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// export interface UserGrowthProps {\n//   value: number;\n// }\n\n// const UserGrowth: React.FC<UserGrowthProps> = ({ value }) => {\n//   return (\n//     <Card>\n//       <CardContent>\n//         <Stack spacing={2}>\n//           <Stack direction=\"row\" sx={{ alignItems: 'flex-start', justifyContent: 'space-between' }} spacing={3}>\n//             <Stack spacing={1}>\n//               <Typography color=\"text.secondary\" gutterBottom variant=\"overline\">\n//                 New Users\n//               </Typography>\n//               <Typography variant=\"h4\">{value}</Typography>\n//             </Stack>\n//             <Avatar sx={{ backgroundColor: 'info.main', height: 56, width: 56 }}>\n//               <PersonAddIcon fontSize=\"large\" />\n//             </Avatar>\n//           </Stack>\n//         </Stack>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// export interface NotificationsProps {\n//   value: number;\n// }\n\n// const Notifications: React.FC<NotificationsProps> = ({ value }) => {\n//   return (\n//     <Card>\n//       <CardContent>\n//         <Stack spacing={2}>\n//           <Stack direction=\"row\" sx={{ alignItems: 'flex-start', justifyContent: 'space-between' }} spacing={3}>\n//             <Stack spacing={1}>\n//               <Typography color=\"text.secondary\" gutterBottom variant=\"overline\">\n//                 Notifications\n//               </Typography>\n//               <Typography variant=\"h4\">{value}</Typography>\n//             </Stack>\n//             <Avatar sx={{ backgroundColor: 'error.main', height: 56, width: 56 }}>\n//               <NotificationsIcon fontSize=\"large\" />\n//             </Avatar>\n//           </Stack>\n//         </Stack>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// export default Dashboard;\nimport React from 'react';\nimport { Avatar, Card, CardContent, CardHeader, Chip, Stack, Typography } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserStoryPage = () => {\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 3,\n    sx: {\n      padding: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"User Story Title\",\n        subheader: \"Assigned to: AI Team\",\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: 'primary.main'\n          },\n          children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: \"This is a detailed description of the AI-generated user story. It explains the goals, requirements, and acceptance criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 23\n          }, this),\n          label: \"In Progress\",\n          color: \"warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_c = UserStoryPage;\nexport default UserStoryPage;\nvar _c;\n$RefreshReg$(_c, \"UserStoryPage\");","map":{"version":3,"names":["React","Avatar","Card","CardContent","CardHeader","Chip","Stack","Typography","PersonIcon","CheckCircleIcon","jsxDEV","_jsxDEV","UserStoryPage","spacing","sx","padding","children","title","subheader","avatar","bgcolor","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","paragraph","icon","label","color","_c","$RefreshReg$"],"sources":["F:/ains/ai_erp/src/screens/Main.jsx"],"sourcesContent":["// import React from 'react';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Card from '@mui/material/Card';\r\n// import CardContent from '@mui/material/CardContent';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\n// import Stack from '@mui/material/Stack';\r\n// import Typography from '@mui/material/Typography';\r\n// import ListAltIcon from '@mui/icons-material/ListAlt';\r\n// import AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\n// import PersonAddIcon from '@mui/icons-material/PersonAdd';\r\n// import NotificationsIcon from '@mui/icons-material/Notifications';\r\n\r\n// const Dashboard = () => {\r\n//   return (\r\n//     <Stack spacing={3} sx={{ padding: 3 }}>\r\n//       <TasksProgress value={75} />\r\n//       <Revenue value={50000} />\r\n//       <UserGrowth value={1200} />\r\n//       <Notifications value={5} />\r\n//     </Stack>\r\n//   );\r\n// };\r\n\r\n// export interface TasksProgressProps {\r\n//   value: number;\r\n// }\r\n\r\n// const TasksProgress: React.FC<TasksProgressProps> = ({ value }) => {\r\n//   return (\r\n//     <Card>\r\n//       <CardContent>\r\n//         <Stack spacing={2}>\r\n//           <Stack direction=\"row\" sx={{ alignItems: 'flex-start', justifyContent: 'space-between' }} spacing={3}>\r\n//             <Stack spacing={1}>\r\n//               <Typography color=\"text.secondary\" gutterBottom variant=\"overline\">\r\n//                 Task Progress\r\n//               </Typography>\r\n//               <Typography variant=\"h4\">{value}%</Typography>\r\n//             </Stack>\r\n//             <Avatar sx={{ backgroundColor: 'warning.main', height: 56, width: 56 }}>\r\n//               <ListAltIcon fontSize=\"large\" />\r\n//             </Avatar>\r\n//           </Stack>\r\n//           <LinearProgress value={value} variant=\"determinate\" />\r\n//         </Stack>\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// };\r\n\r\n// export interface RevenueProps {\r\n//   value: number;\r\n// }\r\n\r\n// const Revenue: React.FC<RevenueProps> = ({ value }) => {\r\n//   return (\r\n//     <Card>\r\n//       <CardContent>\r\n//         <Stack spacing={2}>\r\n//           <Stack direction=\"row\" sx={{ alignItems: 'flex-start', justifyContent: 'space-between' }} spacing={3}>\r\n//             <Stack spacing={1}>\r\n//               <Typography color=\"text.secondary\" gutterBottom variant=\"overline\">\r\n//                 Revenue\r\n//               </Typography>\r\n//               <Typography variant=\"h4\">${value.toLocaleString()}</Typography>\r\n//             </Stack>\r\n//             <Avatar sx={{ backgroundColor: 'success.main', height: 56, width: 56 }}>\r\n//               <AttachMoneyIcon fontSize=\"large\" />\r\n//             </Avatar>\r\n//           </Stack>\r\n//         </Stack>\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// };\r\n\r\n// export interface UserGrowthProps {\r\n//   value: number;\r\n// }\r\n\r\n// const UserGrowth: React.FC<UserGrowthProps> = ({ value }) => {\r\n//   return (\r\n//     <Card>\r\n//       <CardContent>\r\n//         <Stack spacing={2}>\r\n//           <Stack direction=\"row\" sx={{ alignItems: 'flex-start', justifyContent: 'space-between' }} spacing={3}>\r\n//             <Stack spacing={1}>\r\n//               <Typography color=\"text.secondary\" gutterBottom variant=\"overline\">\r\n//                 New Users\r\n//               </Typography>\r\n//               <Typography variant=\"h4\">{value}</Typography>\r\n//             </Stack>\r\n//             <Avatar sx={{ backgroundColor: 'info.main', height: 56, width: 56 }}>\r\n//               <PersonAddIcon fontSize=\"large\" />\r\n//             </Avatar>\r\n//           </Stack>\r\n//         </Stack>\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// };\r\n\r\n// export interface NotificationsProps {\r\n//   value: number;\r\n// }\r\n\r\n// const Notifications: React.FC<NotificationsProps> = ({ value }) => {\r\n//   return (\r\n//     <Card>\r\n//       <CardContent>\r\n//         <Stack spacing={2}>\r\n//           <Stack direction=\"row\" sx={{ alignItems: 'flex-start', justifyContent: 'space-between' }} spacing={3}>\r\n//             <Stack spacing={1}>\r\n//               <Typography color=\"text.secondary\" gutterBottom variant=\"overline\">\r\n//                 Notifications\r\n//               </Typography>\r\n//               <Typography variant=\"h4\">{value}</Typography>\r\n//             </Stack>\r\n//             <Avatar sx={{ backgroundColor: 'error.main', height: 56, width: 56 }}>\r\n//               <NotificationsIcon fontSize=\"large\" />\r\n//             </Avatar>\r\n//           </Stack>\r\n//         </Stack>\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\nimport React from 'react';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Chip,\r\n  Stack,\r\n  Typography,\r\n} from '@mui/material';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nconst UserStoryPage = () => {\r\n  return (\r\n    <Stack spacing={3} sx={{ padding: 3 }}>\r\n      <Card>\r\n        <CardHeader\r\n          title=\"User Story Title\"\r\n          subheader=\"Assigned to: AI Team\"\r\n          avatar={\r\n            <Avatar sx={{ bgcolor: 'primary.main' }}>\r\n              <PersonIcon />\r\n            </Avatar>\r\n          }\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Description\r\n          </Typography>\r\n          <Typography variant=\"body1\" paragraph>\r\n            This is a detailed description of the AI-generated user story. It explains the goals, requirements, and acceptance criteria.\r\n          </Typography>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Status\r\n          </Typography>\r\n          <Chip icon={<CheckCircleIcon />} label=\"In Progress\" color=\"warning\" />\r\n        </CardContent>\r\n      </Card>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default UserStoryPage;\r\n"],"mappingszB,SACEC,MAAM,EACNC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,IAAI,EACJC,KAAK,EACLC,UAAU,QACL,eAAe;AACtB,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,eAAe,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,oBACED,OAAA,CAACL,KAAK;IAACO,OAAO,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,eACpCL,OAAA,CAACT,IAAI;MAAAc,QAAA,gBACHL,OAAA,CAACP,UAAU;QACTa,KAAK,EAAC,kBAAkB;QACxBC,SAAS,EAAC,sBAAsB;QAChCC,MAAM,eACJR,OAAA,CAACV,MAAM;UAACa,EAAE,EAAE;YAAEM,OAAO,EAAE;UAAe,CAAE;UAAAJ,QAAA,eACtCL,OAAA,CAACH,UAAU;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MACT;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFb,OAAA,CAACR,WAAW;QAAAa,QAAA,gBACVL,OAAA,CAACJ,UAAU;UAACkB,OAAO,EAAC,IAAI;UAACC,YAAY;UAAAV,QAAA,EAAC;QAEtC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbb,OAAA,CAACJ,UAAU;UAACkB,OAAO,EAAC,OAAO;UAACE,SAAS;UAAAX,QAAA,EAAC;QAEtC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbb,OAAA,CAACJ,UAAU;UAACkB,OAAO,EAAC,IAAI;UAACC,YAAY;UAAAV,QAAA,EAAC;QAEtC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbb,OAAA,CAACN,IAAI;UAACuB,IAAI,eAAEjB,OAAA,CAACF,eAAe;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACK,KAAK,EAAC,aAAa;UAACC,KAAK,EAAC;QAAS;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAACO,EAAA,GA5BInB,aAAa;AA8BnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}